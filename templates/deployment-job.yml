parameters:
- name: environmentName
  type: string
- name: azureSubscription
  type: string
jobs:
  - deployment: 'deploy'
    variables:
      - system.debug: 'true'
      - group: '${{ parameters.environmentName }}-settings' # Expect a variable group with envrionment-settings that includes all variables
    environment: '${{ parameters.environmentName }}'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            displayName: 'download eshoponweb-iac'
            artifact: eshoponweb-scripts
          - download: current
            displayName: 'download eshoponweb-site'
            artifact: eshoponweb-site
          - download: current
            displayName: 'download eshoponweb-sql'
            artifact: eshoponweb-sql
          - task: AzureCLI@2
            displayName: 'provision azure resources'
            inputs:
              azureSubscription: '${{ parameters.azureSubscription }}'
              scriptType: 'pscore'
              scriptLocation: 'scriptPath'
              scriptPath: '$(Pipeline.Workspace)\eshoponweb-scripts\provision-azure-resources.ps1' # will set connection strings to variables
              arguments: '-Environment ${{ parameters.environmentName }} -SqlAdminUserName $(SqlAdminUserName) -SqlAdminPassword $(SqlAdminPassword)'
          - task: SqlAzureDacpacDeployment@1
            inputs:
              azureSubscription: '${{ parameters.azureSubscription }}'
              AuthenticationType: 'connectionString'
              ConnectionString: '$(catalogConnectionString)'
              deployType: 'SqlTask'
              SqlFile: '$(Pipeline.Workspace)/eshoponweb-sql/catalogdb.sql'
              IpDetectionMethod: 'AutoDetect'
          - task: SqlAzureDacpacDeployment@1
            inputs:
              azureSubscription: '${{ parameters.azureSubscription }}'
              AuthenticationType: 'connectionString'
              ConnectionString: '$(identityConnectionString)'
              deployType: 'SqlTask'
              SqlFile: '$(Pipeline.Workspace)/eshoponweb-sql/identitydb.sql'
              IpDetectionMethod: 'AutoDetect'
          - task: AzureWebApp@1
            displayName: 'deploy azure appservice'
            inputs:
              appType: webApp
              azureSubscription: '${{ parameters.azureSubscription }}'
              appName: 'eshoponweb-${{ parameters.environmentName }}-as'
              package: $(Pipeline.Workspace)/eshoponweb-site/*.zip
              appSettings: '-ConnectionStrings.CatalogConnection "$(catalogConnectionString)" -ConnectionStrings.IdentityConnection "$(identityConnectionString)"'
